package chapter.three;

public class Chapter03_03 {

  /** ◆ 연산자의 우선 순위
   *
   * 식에 사용된 연산자가 둘 이상인 경우, 연산자의 우선 순위에 따라 연산 순서가 결정된다.
   * 곱셈과 나눗셈은 덧셈과 뺄셈보다 우선 순위가 높다는 것은 이미 수학에서 배운 바 있다.
   *
   * 이처럼 연산자의 우선순위는 대부분 상식적인 선에서 해결된다.
   *
   *  우선순위 규칙
   *  1. [-x + 3]
   *    단항 연산자는 이항 연산자보다 우선순위가 높다. 즉 x의 부호 연산자가 먼저 적용되어 x의 부호를 바꾼 후 + 3을 수행한다.
   *
   * 2. [x + 3 * y]
   *    곱셈과 나눗셈이 덧셈과 뺄셈보다 우선순위가 높다.
   *    그래서 '3 * y'가 먼저 수행된다.
   *
   * 3. [x + 3 > y - 2]
   *    비교 연산자보다 산술 연산자가 먼저 수행된다.
   *    그래서 'x + 3', 'y - 2'가 수행된 후 '>'가 수행된다.
   *
   * 4. [x > 3 && x < 5]
   *    논리 연산자 보다 비교 연산자가 먼저 수행된다.
   *    그래서 'x > 3', 'x < 5'가 수행된 뒤 '&&'가 수행된다.
   *
   * 5. 대입 연산자는 연산자 중에 가장 우선 순위가 낮다.
   *
   *
   * ◆ 연산자의 결합 규칙
   *
   * 지금까지 연산자 간의 우선 순위에 대해 알아보았다. 그런데 만약, 우선 순위가 같은 연산자끼리 만난다면 어떻게 될까?
   * 예를 들어 산술 연산자가 비교 연산자를 만나면 우선 순위가 높아 먼저 수행되지만, 산술 연산자끼리 만난 상태라면 우선 순위는 어떻게 되는지 알아보다.
   * 연산자의 우선순위가 같은 경우, 연산자의 결합규칙에 따라 연산이 수행하게 된다.
   *
   *  연산자의 결합규칙에는 [왼쪽 → 오른쪽] 과 [오른쪽 → 왼쪽] 이 두 가지의 결합 규칙이 있으며, 각 연산자 마다 둘 중에 하나를 결합규칙으로 가진다.
   *
   *   (A) 3 + 4 -5
   *   산술 연산자의 경우 결합규칙이 [왼쪽 → 오른쪽]이다. 따라서 '3 + 4' 가 수행된 뒤 결과값 7을 가지고 '7 - 5'가 수행된다.
   *
   *   (B) x = y = 3
   *   대입 연산지의 경우 결합규칙이 [오른쪽 → 왼쪽]이므로, 'y = 3'이 먼저 수행되어 y에 3이 저장되고 그 다음 'x = 3'이 수행된다.
   *
   *
   *   ※ 마지막 정리
   *   연산자는 가지고 있는 우선 순위에 따라 수행 순서가 결정되는데, 만일 우선 순위가 같은 연산자끼리 만나게 되면 연산자가 가진 결합규칙에 따라 수행된다.
   *
   *    1. 산술 > 비교 > 논리 > 대입. 대입 연산자는 최하위 우선순위를 가진다.
   *    2. 단항 연산자 > 이항 연산자 > 삼항 연산자
   *    3. 단항 연산자와 대입 연산자를 제외한 나머지 모든 연산자들은 결합규칙이 [왼쪽 → 오른쪽]이다.
   *
   * */

}
