package chapter.nine._07;

public class Chapter09_7 {

  /** ◆ String 클래스
   *
   * 기존의 다른 언어에서는 문자열을 char 형의 배열로 다루었으나 자바에서는 문자열을 위한 클래스를 별도로 제공한다.
   * 그것이 바로 String 클래스인데, String 클래스는 문자열을 저장하고 이를 다루는데 필요한 메서드를 함께 제공한다.
   * 지금까지는 String 클래스의 기본적인 몇 가지 기능만 사용해 왔지만 String 클래스는 아주 중요하므로 자세히 공부해야 한다.
   *
   * 1. 변경 불가능한(immutable) 클래스
   * String 클래스에는 문자열을 저장하기 위해서 문자형 배열 참조변수(char[]) values 를 인스턴스 변수로 정의해놓고
   * 있다. 인스턴스 생성시 생성자의 매개변수로 입력받는 문자열은 이 인스턴스 변수(value) 에 문자형 배열로 저장되는 것이다.
   * ※ String 클래스는 앞에 final 이 붙어 있으므로 다른 클래스의 조상이 될 수 없다.
   *
   * public final class String implements java.io.Serializable, Comparable {
   *   private char[] value;
   *   ...
   * }
   *
   * 한번 생성된 String 인스턴스가 갖고 있는 문자열은 읽어 올 수만 있고, 변경할 수는 없다.
   * 예를 들어 아래와 같이 '+' 연산자를 이용해서 문자열을 결합하는 경우 인스턴스 내의 문자열이 바뀌는 것이 아니라
   * 새로운 문자열("ab") 가 담긴 String 인스턴스가 생성되는 것이다.
   *
   * String a = "a";
   * String b = "b";
   * a = a + b;
   *
   * 이처럼 덧셈연산자 '+' 를 사용해서 문자열을 결합하는 것은 매 연산 시 마다 새로운 문자열을 가진 String 인스턴스가
   * 생성되어 메모리 공간을 차지하게 되므로 가능한 한 결합횟수를 줄이는 것이 좋다.
   *
   * 문자열 간의 결합이나 추출 등 문자열을 다루는 작업이 많이 필요한 경우 String 클래스 대신 StringBuffer 클래스를
   * 사용하는 것이 좋다. StringBuffer 인스턴스에 저장된 문자열은 변경이 가능하므로 하나의 StringBuffer 인스턴스만으로
   * 문자열을 다루는 것이 가능하다.
   *
   *
   *
   *
   *
   *
   * */

}
