package chapter.nine._22;

public class Chapter09_22 {

  /** ◆ Math 클래스
   *
   * Math 클래스는 기본적인 수학 계산에 유용한 메서드로 구성되어 있다. 임의의 수를 얻을 수 있는 random() 과 반올림에 사용되는
   * round() 등은 이미 학습한 바 있다.
   *
   * Math 클래스의 생성자는 접근 제어자가 private 이기 때문에 다른 클래스에서 Math 인스턴스를 생성할 수 없도록 되어 있다. 그 이유는
   * 클래스 내에 인스턴스 변수가 하나도 없어서 인스턴스를 생성할 필요가 없기 때문이다. Math 클래스의 메서드는 모두 static 이며,
   * 아래와 같이 2가의 상수만 정의해놓았다.
   *
   * public static final double E = 2.718... // 자연로그의 밑
   * public static final double PI = 3.141592... // 원주율
   *
   * 올림, 버림, 반올림
   * 소수점 n 번째 자리에서 반올림한 값을 얻기 위해서는 round() 을 사용해야 하는데, 이 메서드는 항상 소수점 첫째 자리에서 반올림을 해서 정수값(long) 을 결과로 반환한다.
   * 여러분이 원하는 자리 수에서 반올림된 값을 얻기 위해서는 간단히 10의 n 제곱으로 곱한 후, 다시 곱한 수로 나눠주기만 하면 된다. 예를 들어, 90.7552 라는 값을
   * 소수점 셋째자리에서 반올림한 후 소수점 두 자리까지의 값만을 얻고 싶으면 90.7552 에 100을 곱한다. 그 결과는 9075.52가 되며, 여기에 round() 를 사용하면
   * 그 결과는 9076이 된다. 이 결과를 다시 100.0 으로 나누면 90.76 이라는 값을 얻게 된다.
   *
   * 1. 원래 값에 100을 곱한다.
   * 90.7552 * 100 = 9075.52
   *
   * 2. 위의 결과에 Math.round() 를 사용한다.
   * Math.round(9075.52) = 9076
   *
   * 3. 위의 결과를 다시 100.0 으로 나눈다.
   * 9076 / 100.0 = 90.76
   *
   * 만약 이때 100.0이 아닌 정수형 값인 100 또는 100L 으로 나눈다면, 결과는 정수형 값을 얻게 될 것이다. 위의 경우 100.0 대신 100으로 나눈다면
   * 90이라는 정수값을 결과로 얻게 된다. 정수형 간의 연산에서는 반올림이 이루어지지 않는다는 것을 반드시 기억하자.
   *
   * 소수점 넷째자리에서 반올림된 소수점 세 자리 값을 얻으려면 100대신 1000을 곱하고 1000.0 으로 나누면 된다. 그리고 반올림이 필요하지 않다면
   * round() 를 사용하지 않고 단순히 1000으로 곱하고 1000.0 으로 나누면 될 것이다.
   *
   *
   *
   *
   *
   * */

}
