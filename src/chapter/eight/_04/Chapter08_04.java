package chapter.eight._04;

public class Chapter08_04 {

  /** ◆ 예외 처리하기 try -catch 문
   *
   * 프로그램의 실행 도중에 발생하는 에러는 어쩔 수 없지만, 예외는 프로그래머가 이에 대한 처리를 미리 해주어야 한다.
   * 예외처리 (exception handling) 란, 프로그램 실행 시 발생할 수 있는 예기치 못한 예외의 발생에 대비한 코드를 작성하는 것이며,
   * 예외 처리의 목적은 예외의 발생으로 인해 실행 중인 프로그램이 갑작스레 비정상 종료되는 것을 막고, 정상 상태를 유지할 수 있도록 하는 것이다.
   *
   * 예외처리 (exception handling)
   * 정의: 프로그램 실행 시 발생할 수 있는 예외에 대하여 대비할 수 있는 코드를 작성하는 것
   * 목적: 프로그램의 비정상적인 종료를 막고, 정상 실행 상태를 유지하는 것
   *
   * ※ 에러와 예외는 모두 실행 시 발생하는 오류이다.
   *
   * 발생한 예외를 처리하지 못하면, 프로그램은 비정상적으로 종료되며, 처리되지 못한 예외(uncaught exception) 는 JVM 의 '예외처리기(UncaughtExceptionHandler)' 가 받아서
   * 예외의 원인을 화면에 출력한다.
   *
   * 예외를 처리하기 위해서는 try - catch 문을 사용하며, 그 구조는 다음과 같다.
   *
   * try {
   *   // 예외가 발생할 가능성이 있는 코드.
   * } catch (Exception1 e1) {
   *   //Exception1 이 발생했을 경우, 이를 처리하기 위한 코드
   * } catch (Exception2 e2) {
   *   //Exception2 이 발생했을 경우, 이를 처리하기 위한 코드
   * } catch (Exception3 e3) {
   *   //Exception3 이 발생했을 경우, 이를 처리하기 위한 코드
   * }
   *
   * 하나의 try 블럭 다음에는 여러 종류의 예외를 처리할 수 있도록 하나 이상의 catch 블럭이 올 수 있으며, 이 중 발생한 예외의 종류와
   * 일치하는 단 한 개의 catch 블럭이 수행된다. 발생한 예외의 종류와 일치하는 catch 블럭이 없으면 예외는 처리되지 않는다.
   *
   * ※ if 문과 달리 try-catch 문은 블럭 안에 문장이 하나뿐이더라도 중괄호{} 를 생략할 수 없다.
   *
   *
   * */

}
