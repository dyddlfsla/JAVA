package chapter.eleven._12;

public class Chapter11_12 {

  /** ◆ LinkedList
   *
   * 배열은 가장 기본적인 형태의 자료구조로 구조가 간단하며 사용하기 쉽고 데이터를 읽어 오는데 걸리는 시간(접근 시간, access time) 이 가장 빠르다는 장점을 가지고 있다.
   * 하지만 단점 역시 가지고 있는데, 단점은 다음과 같다.
   *
   * =======================================================================================
   * 1. 크기를 변경할 수 없다.
   *  - 크기를 변경할 수 없으므로 매번 새로운 배열을 생성해서 데이터를 복사해야 한다.
   *  - 실행 속도를 향상시키기 위해서는 충분히 큰 크기의 배열을 생성해야 하므로 메모리가 낭비된다.
   *
   * 2. 비순차적인 데이터의 추가 또는 삭제에 시간이 많이 걸린다.
   *  - 차례대로 데이터를 추가하고 마지막에서부터 데이터를 삭제하는 것은 빠르지만
   *  - 배열의 중간에 데이터를 추가하려면, 빈 자리를 만들기 위해 다른 데이터들을 복사해서 이동해야 한다.
   * =======================================================================================
   *
   * 이러한 배열의 단점을 보완하기 위해서 LinkedList 라는 자료구조가 고안되었다. 배열은 모든 데이터가 연속적으로 존재하지만
   * LinkedList 는 불연속적으로 존재하는 데이터를 서로 연결(linked) 한 형태로 구성되어 있다.
   *
   * LinkedList 의 각 요소(node)들은 자신과 연결된 다음 요소에 대한 참조(주소값)와 데이터로 구성되어 있다.
   *
   * class Node {
   *   Node next; // 다음 요소의 주소를 저장
   *   Object obj; // 데이터를 저장
   * }
   *
   *
   *
   *
   * */

}
