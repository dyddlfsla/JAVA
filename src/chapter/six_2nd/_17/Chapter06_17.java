package chapter.six_2nd._17;

public class Chapter06_17 {

  /** ◆ 메서드의 호출
   *
   * 메서드를 정의했어도 호출하지 않으면 아무 일도 일어나지 않는다. 메서드를 호출해야만 구현부 {} 안의 문장들이 수행된다. 메서드를 호출하는
   * 방법은 다음과 같다.
   *
   * ※ main 메서드는 프로그램 실행 시 OS 에 의해 자동적으로 호출된다.
   *
   * =============================================================================================
   * 메서드 호출 방법
   *
   * [메서드이름]([값1], [값2], ...);
   *
   * ex) print99danAll(); // void print99danAll() {...} 메서드를 호출.
   *    int result = add(3, 5); // int add(int x, int y) {...} 를 호출하고, 그 반환값을 result 에 저장.
   *
   * 1. 인수(argument) 와 매개변수(parameter)
   *  메서드를 호출할 때 괄호() 안에 지정해준 값들을 '인수(argument)' 또는 '인자' 라고 하는데, 인자의 개수와 순서는 호출된 메서드에
   *  선언된 매개변수와 일치해야 한다.
   *
   *  그리고 인수는 메서드가 호출되면서 매개변수에 대입되므로, 인자의 타입은 매개변수의 타입과 일치하거나 자동 형변환이 가능한것이어야 한다.
   *
   *  public static void main(String args[]) {
   *    ...
   *    int result = add(3, 5);  //인수에 3과 5를 넣고 add 메서드를 호출한다. 메서드의 파라미터로 int 값을 받도록 되어 있으므로 똑같이 int 타입의 인수를 넣어야 한다.
   *
   *  }
   *
   *  int add(int x, int y) {  //
   *    int result = x + y;
   *    return result;
   *  }
   *
   *  만일 메서드에 선언된 매개변수의 개수보다 많은 값을 괄호()에 넣거나 타입이 다른 값을 넣으면 컴파일러가 경고를 발생시킨다.
   *  int result = add(1, 2, 3); // 인자의 개수와 매개변수의 개수가 서로 다름.
   *  int result = add(1.0, 2.0); // 인자의 타입과 매개변수의 타입이 서로 다름.
   *
   *  반환타입이 void 가 아닌 경우, 메서드가 작업을 수행하고 반환한 값을 대입연산자로 변수에 저장하는 것이 보통이지만, 저장하지 않아도 문제가 되지 않는다.
   *
   *  int result = add(3, 5); //int add(int x, int y) 의 호출 결과를 result 에 저장
   *  add(3, 5); // 메서드가 반환한 결과를 사용하지 않아도 된다.
   *
   *
   *
   * */

}
