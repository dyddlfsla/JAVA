package chapter.seven;

public class Chapter07_03 {

  /** ◆ 클래스 간의 관계 - 포함관계
   *
   * 지금까지 상속을 통해 클래스 간에 관계를 맺어 주고 클래스를 재사용하는 방법에 대해서 알아보았다. 상속 이외에도 클래스를
   * 재사용하는 또 다른 방법이 있는데, 그것은 클래스 간에 '포함(Composite)'관계를 맺어 주는 것이다. 클래스 간의 포함관계를
   * 맺어 준다는 것은 한 클래스의 멤버변수로 다른 클래스 타입의 참조변수를 선언하는 것을 말한다.
   *
   * 원을 표현하기 위한 Circle 클래스와 좌표상의 한 점을 다루는 Point 클래스가 다음과 같이 정의되어 있다고 하자.
   *
   *  Circle {
   *    int x;
   *    int y;
   *    int r;
   *  }
   *
   *  Point {
   *    int x;
   *    int y;
   *  }
   *
   * Point 클래스를 재사용해서 Circle 클래스를 작성한다면 다음과 같이 할 수 있을 것이다.
   *
   * Circle {
   *   Point point = new Point(); // 원점
   *   int r;
   * }
   *
   * 이와 같이 한 클래스를 작성하는 데 다른 클래스를 멤버변수로 선언하여 포함시키는 것은 좋은 생각이다. 하나의 거대한 클래스를
   * 작성하는 것보다 단위별로 여러 개의 클래스를 작성한 다음, 이 단위 클래스들을 포함 관계로 재사용하면 보다 간결하고
   * 손쉽게 클래스를 작성할 수 있다. 또한 작성된 단위 클래스들은 다른 클래스를 작성하는데 재사용될 수 있을 것이다.
   *
   *  class Car {
   *    Engine engine = new Engine();
   *    Door[] door = new Door[4];
   *  }
   *
   * */

}
