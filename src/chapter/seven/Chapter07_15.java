package chapter.seven;

public class Chapter07_15 {

  /** ◆ import 문
   *
   * 소스코드를 작성할 때, 다른 패키지의 클래스를 사용하려면 패키지명이 포함된 클래스 이름을 사용해야 한다. 이 때 매번
   * 패키지명을 붙여서 작성한다면 불편한 일이 될 것이다. 클래스 코드를 작성하기 전에 import 문으로 사용하고자 하는 클래스의
   * 패키지를 미리 명시해주면 소스 코드에서 클래스 이름을 작성할 때 패키지명은 생략할 수 있게 된다.
   *
   *  java.util.Date today = new java.util.Date();
   *                      ↓
   *  import java.util.Date;
   *  ...
   *  Date today = new Date();
   *
   * import 문의 역할은 컴파일러에게 소스파일에 사용된 클래스의 패키지에 대한 정보를 미리 제공하는 것이다.
   * 컴파일러는 import 문을 통해 소스파일에 사용된 클래스들의 패키지를 알아낸 다음, 모든 클래스 이름 앞에 패키지명을 붙여 주는 것이다.
   * 여러 통합 개발 환경(IDE) 마다 자동으로 import 문을 추가해주는 기능을 제공한다.
   *
   * 모든 소스파일(.java)에서 import 문은 package 문 다음에, 그리고 클래스 선언 이전에 위치해야 한다.
   * import 문은 package 문과 달리 한 소스파일에 여러 번 선언할 수 있다.
   *
   * import 문을 선언하는 방법은 다음과 같다.
   *
   *  import 패키지명.클래스명;
   *      or
   *  import 패키지명.*;
   *
   * import 키워드와 함께 생략하고자 하는 패키지명과 클래스를 같이 써주면 된다. 같은 패키지에서 여러 클래스를 사용하는 경우라면
   * 각 클래스마다 import 를 선언하지 말고 '패키지명.*'을 이용해서 해당 패키지의 모든 클래스를 지정하는 것이 편하다.
   * 컴파일러가 해당 패키지의 모든 클래스를 찾게 되지만 그렇다고 성능 상의 차이가 발생하는 것은 아니다.
   *
   *
   *
   * */

}
