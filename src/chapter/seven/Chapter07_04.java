package chapter.seven;

public class Chapter07_04 {

  /** ◆ 클래스 간의 관계 결정하기
   *
   * 클래스를 작성하는데 있어서 상속 관계를 맺어 줄 것인지 포함 관계를 맺어 줄 것인지 결정하는 것은 때때로 혼돈스러울 수 있다.
   * 앞서 예를 든 Circle 클래스에서, Point 클래스를 포함시키는 대신 상속 관계를 맺어주었다면 다음과 같을 것이다.
   *
   *  class Circle extends Point {
   *    int ;
   *  }
   *
   * 두 클래스 간의 관계를 상속으로 맺어준 경우와 포함으로 맺어준 경우를 비교해보면 결과적으로 보았을 때 별 차이가 없어 보인다.
   * 그럴 때는 ' ~ 은 ~ 이다.( is-a)' 와 '~ 은 ~ 을 가지고 있다.(has-a)' 를 넣어서 문장을 만들어보면
   * 클래스 간의 관계가 보다 명확해 진다.
   *
   *  - 원(Circle)은 점(Point)이다. => Circle is a Point.
   *  - 원(Circle)은 점(Point)을 가지고 있다. => Circle has a Point.
   *
   * 원은 원점(Point)과 반지름으로 구성되므로 위의 두 문장을 비교해 보면 첫 번째 문장보다 두 번째 문장이 더 자연스럽다는 것을 알 수 있다.
   * 이처럼 클래스를 가지고 문장을 만들었을 때 '~ 은 ~ 이다.' 라는 문장이 성립한다면, 서로 상속관계를 맺어주고, '~ 은 ~ 을 가지고 있다.'
   * 라는 문장이 성립한다면 포함관계를 맺어 주는 것이 더 옳다.
   *
   * 몇 가지 예를 더 들면, Car 클래스와 SportsCar 클래스는 'SportsCar 는 Car 이다.' 라는 문장이 더 자연스럽게 성립하기 때문에
   * 클래스 관계를 상속 관계로 맺어 주어야 한다.
   *
   * 문장으로 표현해보고 판별하기.
   *
   *  ※ 1. 상속관계 → '~ 은 ~ 이다.'
   *    2. 포함관계 → '~ 은 ~ 을 가지고 있다.'
   *
   * */

}
