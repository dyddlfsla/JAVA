package chapter.six;

public class Chapter06_06 {

  /** ◆ 객체의 생성과 사용
   *
   * Tv 클래스를 선언한 것은 Tv 설계도를 작성한 것에 불과하므로, Tv 인스턴스를 생성해야 제품(Tv)을 사용할 수 있다.
   * 클래스로부터 인스턴스를 생성하는 방법에는 여러 가지가 있지만 일반적으로는 다음과 같이 한다.
   *
   *  ① 클래스명 변수명;           //클래스의 객체를 참조하기 위한 참조변수를 선언.
   *  ② 변수명 = new 클래스명();   //클래스의 객체를 생성 후, 객체의 주소를 참조변수에 저장.
   *                           ↓
   *    Tv tv;     //Tv 클래스 타입의 참조변수 tv를 선언.
   *    tv = new Tv(); //Tv 인스턴스를 생성한 후, 생성된 Tv 인스턴스의 주소를 tv 에 저장.
   *
   *
   *  1. Tv tv;
   *  Tv 클래스 타입의 참조변수 tv를 선언한다. 메모리에 참조변수 tv를 위한 공간이 마련된다. 아직 인스턴스가 생성되지 않았으므로
   *  이 참조변수로 할 수 있는 것은 아무것도 없다.
   *
   *  2. tv = new Tv();
   *  연산자 new 에 의해 Tv 클래스의 인스턴스가 메모리의 빈 공간에 생성된다. 주소가 0x100인 곳에 생성되었다고 가정하자.
   *  이때 멤버변수는 각 자료형에 해당하는 기본값으로 초기화 된다.
   *  color 는 참조형(String)이므로 null, power 는 boolean 의 기본값 false, 그리고 channel 은 int 이므로 0으로 초기화 된다.
   *
   *  그 다음에는 대입 연산자(=)에 의해서 생성된 객체의 주소값이 참조변수 tv에 저장된다. 이제는 참조변수 tv를 통해 Tv 인스턴스에
   *  접근할 수 있다. 인스턴스를 다루기 위해서는 참조변수가 반드시 필요하다.
   *
   *  3. tv.channel = 7;
   *  참조변수 tv에 저장된 주소에 있는 인스턴스의 멤버변수 channel 에 7을 저장한다. 여기서 알 수 있는 것처럼
   *  인스턴스의 멤버변수(속성)을 사용하려면 '참조변수.멤버변수' 와 같이 하면 된다.
   *
   *  4. tv.channelDown();
   *  참조변수 tv 가 참조하고 있는 Tv 인스턴스의 channelDown() 메서드를 호출한다. 해당 메서드는 멤버변수 channel 에
   *  저장되어 있는 값을 1 감소시킨다.
   *
   *
   *
   *  ※ 인스턴스와 참조변수의 관계는 마치 우리가 생활에서 사용하는 Tv와 Tv 리모콘의 관계와 같다.
   *  Tv 리모콘(참조변수)를 사용하여 Tv(인스턴스)를 다루기 때문이다. 즉, 인스턴스는 오직 참조변수를 통해서만 다룰 수 있다.
   *
   *     ----------------------------------------------------------------------------
   *    | 인스턴스는 참조변수를 통해서만 다룰 수 있으며, 참조변수의 타입은 인스턴스의 타입과 일치해야 한다. |
   *    -----------------------------------------------------------------------------
   *
   * */

  public static void main(String[] args) {
    Tv tv;
    tv = new Tv();
    tv.channel = 7;
    tv.channelDown();
    System.out.printf("현재 채널은 %d번 입니다.%n", tv.channel);
  }
}

class Tv {

  String color;
  boolean power;
  int channel;

  void power() {
    power = !power;
  }

  void channelUp() {
    ++channel;
  }

  void channelDown() {
    --channel;
  }
}
