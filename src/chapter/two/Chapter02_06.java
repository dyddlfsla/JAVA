package chapter.two;

public class Chapter02_06 {

  /** ◆ 리터럴의 타입과 접미사
   * 변수에 타입이 있는 것처럼 리터럴에도 타입이 있다. 변수의 타입은 저장될 '값의 타입(리터럴의 타입)'에 의해 결정되므로
   * 만일 리터럴에 타입이 없다면 변수의 타입도 필요없을 것이다.
   *
   * 정수형과 실수형에는 많은 타입이 존재하므로 리터럴에 접미사를 붙여서 타입을 구분한다.
   * 정수형의 경우, long타입의 리터럴에 접미사 'l' 또는 'L'을 붙이고, 접미사가 없으면 int타입의 리터럴이다.
   * byte와 short타입의 리터럴은 별도로 존재하지 않으며 byte와 short타입의 변수에 값을 저장할 때는 그냥 int타입의 리터럴을 사용한다.
   *
   * 또한, 10진수 이외에도 2, 8, 16진수로 표현된 리터럴을 변수에 저장할 수 있으며, 이때 리터럴 앞에 접두사 '0x'또는 '0X' 그리고
   * 8진수의 경우에는 '0'을 붙인다.
   *
   *  int octNum = 010; // 8진수 10 저장
   *  int hexNum = 0x10; // 16진수 10 저장
   *
   * 그리고 JDK 1.7부터 정수형 리터럴 중간에 구분자 '_'를 넣을 수 있게 되어 큰 숫자를 읽기에 편해졌다.
   *
   *  long big = 100_000_000_000L;
   *  long hex = 0xFFFF_FFFF_FFFF_FFFFL;
   *
   * 실수형에서는 float타입의 리터럴에 접미사 'f' 또는 'F'를 붙이고 double 타입의 리터럴에는 'd' 또는 'D'를 붙인다.
   *
   *  float pi = 3.14f;   //접미사 생략 불가
   *  double rate = 1.618d; //접미사 생략 가능
   *
   *  정수형에서는 int가 기본 자료형인 것처럼 실수형에서는 double이 기본 자료형이기 때문에 접미사 'd'를 생략할 수 있다.
   *  접미사 f 와 L 두 개는 꼭 기억하자.
   *
   *  ◆ 'A'와 같이 작은 따옴표로 문자 하나를 감싼 것을 '문자 리터럴'이라고 한다. 두 문자 이상은 큰 따옴표로 감싸야 하며
   *  '문자열 리터럴'이라고 한다.
   *
   *  char ch = 'J'; // char ch = 'JAVA'; 불가능
   *  String name = "Java";
   *
   *  char 타입의 변수는 단 하나의 문자만 저장할 수 있으므로 여러 문자(문자열)을 저장하기 위해선 String 타입을 사용한다.
   *  문자열 리터럴은 ""안에 아무런 문자도 넣지 않는 것을 허용하며, 이를 빈 문자열(empty string)이라고 한다.
   *  그러나 문자 리터럴은 반드시 ''안에 하나의 문자가 있어야 한다.
   *
   *   String str = ""; // 빈 문자열 허용
   *   char ch = ''; // 빈 문자 불가
   *   char ch = ' '; // 공백 문자(blank) 가능
   *
   *  원래 String은 클래스이므로 아래와 같이 객체를 생성하는 연산자 new 를 사용해야 하지만 다음과 같은 표현이 허용된다.
   *
   *   String name = new String("Java"); // String 객체 생성
   *   String name = "Java";
   *
   *  이에 관하여 자세한 내용은 추후에 다룬다.
   *
   *
   *
   * */

}
