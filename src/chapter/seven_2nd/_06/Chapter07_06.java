package chapter.seven_2nd._06;

public class Chapter07_06 {

  /** ◆ Object 클래스 - 모든 클래스의 조상
   *
   * Object 클래스는 모든 클래스의 상속계층도에서 최상위에 위치하고 있는 조상 클래스이다. 다른 클래스로부터
   * 상속 받지 않는 모든 클래스들은 자동적으로 Object 클래스로부터 상속받게 함으로써 이것을 가능하게 한다.
   * 만일 다음과 같이 다른 클래스로부터 상속을 받지 않는 Tv 클래스를 정의하였다고 하자.
   *
   * class Tv {
   *   ...
   * }
   *
   * 위의 코드를 컴파일 하면 컴파일러는 위의 코드를 다음과 같이 자동적으로 'extends Object' 를 추가하여 Tv 클래스가
   * Object 클래스로부터 상속받도록 한다.
   *
   * 이렇게 함으로써 Object 클래스가 모든 클래스의 조상이 되도록 한다. 만일 다른 클래스로부터 이미 상속을 받고 있다고 하더라도
   * 상속계층도를 따라 조상 클래스, 조상 클래스의 조상 클래스를 찾아올라가다 보면 결국 마지막 최상위 조상은 Object 클래스일 것이다.
   *
   * ※ 이미 어떤 클래스로부터 상속받도록 지정된 클래스에 대해서는 컴파일러가 'extends Object' 를 추가하지 않는다.
   *
   * Tv 클래스가 있고 Tv 클래스를 상속받는 SmartTv  클래스가 있다고 하면 다음과 같은 상속계층도가 만들어질 것이다.
   *
   * class Object {
   *   ...
   * }
   *       ↓
   *
   * class Tv extends Object {
   *   ...
   * }
   *       ↓
   *
   * class SmartTv extends Tv {
   *   // 당장은 Tv 클래스를 상속받더라도 상속계층도를 올라가다 보면 결과적으로 SmartTv 클래스는 Object 클래스를 상속받게 될 것이다.
   * }
   *
   * 이처럼 모든 상속계층도의 최상위에는 Object 클래스가 위치한다. 그래서 자바의 모든 클래스들은 Object 클래스의 멤버들을
   * 상속 받기 때문에 Object 클래스에 미리 정의된 멤버들을 사용할 수 있다. 그동안 toString() 이나 equals(Object o) 와 같은
   * 메서드를 따로 정의하지 않고도 사용할 수 있었던 이유는 이 메서드들이 Object 클래스에 정의된 것들이기 때문이다.
   *
   *
   *
   *
   * */

}
