package chapter.seven_2nd._15;

public class Chapter07_15 {

  /** ◆ import 문
   *
   * 소스코드를 작성할 때 다른 패키지의 클래스를 사용하려면 패키지명이 포함된 클래스 이름, 풀네임을 사용해야 한다. 하지만, 매번 패키지명을
   * 붙여서 작성하기란 여간 불편한 일이 아니다.
   *
   * 클래스의 코드를 작성하기 전에 import 문으로 사용하고자 하는 클래스의 패키지를 미리 명시해주면 소스코드에서 사용되는 클래스 이름에서
   * 패키지명은 생략할 수 있다.
   *
   * ====================================================
   * java.util.Date today = new java.util.Date();
   *
   *                  ↓
   * import java.util.Date;
   *
   * Date today = new Date(); //패키지명을 생략할 수 있게 된다.
   * ====================================================
   *
   * import 문의 역할은 컴파일러에게 소스파일에 사용된 클래스의 패키지에 대한 정보를 제공하는 것이다.
   * 컴파일 시에 컴파일러는 import 문을 통해 소스 파일에 사용된 클래스들의 패키지를 알아낸 다음, 모든 클래스의 이름 앞에 패키지명을 붙여준다.
   *
   * 모든 소스파일(.java) 에서 import 문은 package 문 다음에, 그리고 클래스 선언문 이전에 위치해야 한다. 또한 import 문은 package 문과 달리
   * 소스파일에 여러 번 선언할 수 있다.
   *
   * import 문을 선언하는 방법은 다음과 같다.
   * =======================
   * import 패키지명.클래스명;
   *         또는
   * import 패키지명.*;
   * =======================
   *
   * 키워드 import 와 패키지명을 생략하고자 하는 클래스의 이름을 함께 써주면 된다.
   * 같은 패키지에서 여러 개의 클래스가 사용될 때, import 문을 여러 번 사용하는 대신 '패키지명.*' 을 이용해서 지정된 패키지에 속하는 모든
   * 클래스를 패키지명 없이 사용할 수 있다.
   *
   * 클래스이름을 지정해주는 대신 * 을 사용하면, 컴파일러는 해당 패키지에서 일치하는 클래스이름을 찾아야 하는 수고를 더 해야 할 것이다.
   * 단지 그 뿐이다. 실행 시 성능 차이는 없다.
   *
   *
   *
   * */

}
