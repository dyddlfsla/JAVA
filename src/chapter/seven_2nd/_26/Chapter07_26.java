package chapter.seven_2nd._26;

public class Chapter07_26 {

  /** ◆ instanceof 연산자
   *
   * 참조변수가 참조하고 있는 인스턴스의 실제 타입을 알아보기 위해 instanceof 연산자를 사용한다. 주로 조건문에 사용되며
   * instanceof 의 왼쪽에는 참조변수를, 오른쪽에는 타입(클래스명)이 피연산자로 위치한다. 그리고 연산의 결과로 boolean 값인
   * true 와 false 중 하나를 반환한다.
   *
   * instanceof 를 이용한 연산결과로 true 를 얻었다는 것은 참조변수가 검사한 타입으로 형변환이 가능하다는 것을 의미한다.
   *
   * ※ 값이 null 인 참조변수에 대해 instanceof 연산자를 사용하면 false 를 결과로 얻는다.
   *
   * void doWork(Car c) {
   *   if (c instanceof FireEngine) { // 1.형변환이 가능한지 확인
   *     FireEngine fe = (FireEngine) c; // 2.형변환
   *     fe.water();
   *     ...
   *   }
   * }
   *
   * 위의 코드는 Car 타입의 참조변수 c 를 매개변수로 하는 메서드이다. 이 메서드가 호출될 때, 매개변수로 Car 클래스 또는 그 자손 클래스의
   * 인스턴스를 넘겨받겠지만 메서드 내에서는 이 인스턴스가 정확히 어떤 인스턴스인지 알 방법이 없다. 그래서 instanceof 연산자로 참조변수
   * c 가 가리키고 있는 인스턴스의 타입을 체크하고, 적절히 형변환한 다음에 작업을 해야 한다.
   *
   * 조상 타입의 참조변수로 자손 타입의 인스턴스를 참조할 수 있기 때문에, 참조변수의 타입과 인스턴스의 타입이 항상 일치하지는 않는다는 것을 배웠다.
   * 조상 타입의 참조변수로는 실제 인스턴스가 가진 모든 멤버들을 사용할 수 없기 때문에 실제 인스턴스와 같은 타입의 참조변수로 형변환을 해야만
   * 인스턴스의 모든 멤버들을 사용할 수 있다.
   *
   * ================================================
   * 어떤 타입에 대한 instanceof 연산의 결과가 true 라는 것은
   * 검사한 타입으로 형변환이 가능하다는 것을 뜻한다.
   * ================================================
   *
   * */

}
