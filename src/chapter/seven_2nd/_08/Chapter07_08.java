package chapter.seven_2nd._08;

public class Chapter07_08 {

  /** ◆ 오버라이딩의 조건
   *
   * 오버라이딩은 메서드의 내용만을 새로 작성하는 것이므로 메서드의 선언부(메서드 이름, 매개변수, 반환타입)는 조상의 것과 완전히 일치해야 한다.
   * 다만 접근 제어자(access modifier) 와 예외(exception) 는 제한된 조건 하에서만 다르게 변경할 수 있다. 예외의 경우 추후 학습하게 될 것이다.
   *
   * ====================================================================================
   * ① 접근 제어자는 조상 클래스의 메서드보다 좁은 범위로 변경할 수 없다.
   * : 만일 조상 클래스에 정의된 메서드의 접근 제어자가 protected 라면, 이를 오버라이딩하는 자손 클래스의 메서드는 접근 제어자가
   *   같은 protected 나 public 이어야 한다. 대부분의 경우 같은 범위의 접근 제어자를 사용한다. 접근 제어자의 접근 범위를
   *   넓은 것에서 좁은 것 순으로 나열하면 public, protected, default, private 이다.
   *
   * ② 조상 클래스의 메서드보다 많은 수의 예외를 선언할 수 없다.
   * : 아래의 코드를 보면 Child 클래스의 parentMethod() 에 선언된 예외의 개수가 조상인 Parent 클래스의 parentMethod() 에
   *  선언된 예외의 개수보다 적으므로 올바르게 오버라이딩되었다.
   *
   *  class Parent {
   *    void parentMethod() throws IOException, SQLException {
   *      ...
   *    }
   *  }
   *
   *  class Child {
   *    void parentMethod() throws IOException {
   *      ...
   *    }
   *  }
   *
   *
   *  정리하자면, 오버라이딩을 하기 위해서는 다음과 같은 조건들을 지켜야 한다.
   *
   *  1. 선언부가 조상 클래스의 메서드와 일치해야 한다.
   *  2. 접근 제어자를 조상 클래스의 메서드보다 좁은 범위로 변경할 수 없다.
   *  3. 예외는 조상 클래스의 메서드보다 많이 선언할 수 없다.
   *
   *
   *
   *
   * */

}
